from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class HistoryGet200ResponseMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, charging_amp_hrs=None, power_generation=None, max_charging_power=None, power_consumption=None, discharging_amp_hrs=None, max_battery_voltage=None, max_charging_current=None, max_discharging_power=None, max_discharging_current=None, current_day_min_battery_voltage=None):  # noqa: E501
        """HistoryGet200ResponseMessage - a model defined in OpenAPI

        :param charging_amp_hrs: The charging_amp_hrs of this HistoryGet200ResponseMessage.  # noqa: E501
        :type charging_amp_hrs: float
        :param power_generation: The power_generation of this HistoryGet200ResponseMessage.  # noqa: E501
        :type power_generation: float
        :param max_charging_power: The max_charging_power of this HistoryGet200ResponseMessage.  # noqa: E501
        :type max_charging_power: float
        :param power_consumption: The power_consumption of this HistoryGet200ResponseMessage.  # noqa: E501
        :type power_consumption: float
        :param discharging_amp_hrs: The discharging_amp_hrs of this HistoryGet200ResponseMessage.  # noqa: E501
        :type discharging_amp_hrs: float
        :param max_battery_voltage: The max_battery_voltage of this HistoryGet200ResponseMessage.  # noqa: E501
        :type max_battery_voltage: float
        :param max_charging_current: The max_charging_current of this HistoryGet200ResponseMessage.  # noqa: E501
        :type max_charging_current: float
        :param max_discharging_power: The max_discharging_power of this HistoryGet200ResponseMessage.  # noqa: E501
        :type max_discharging_power: float
        :param max_discharging_current: The max_discharging_current of this HistoryGet200ResponseMessage.  # noqa: E501
        :type max_discharging_current: float
        :param current_day_min_battery_voltage: The current_day_min_battery_voltage of this HistoryGet200ResponseMessage.  # noqa: E501
        :type current_day_min_battery_voltage: float
        """
        self.openapi_types = {
            'charging_amp_hrs': float,
            'power_generation': float,
            'max_charging_power': float,
            'power_consumption': float,
            'discharging_amp_hrs': float,
            'max_battery_voltage': float,
            'max_charging_current': float,
            'max_discharging_power': float,
            'max_discharging_current': float,
            'current_day_min_battery_voltage': float
        }

        self.attribute_map = {
            'charging_amp_hrs': 'chargingAmpHrs',
            'power_generation': 'powerGeneration',
            'max_charging_power': 'maxChargingPower',
            'power_consumption': 'powerConsumption',
            'discharging_amp_hrs': 'dischargingAmpHrs',
            'max_battery_voltage': 'maxBatteryVoltage',
            'max_charging_current': 'maxChargingCurrent',
            'max_discharging_power': 'maxDischargingPower',
            'max_discharging_current': 'maxDischargingCurrent',
            'current_day_min_battery_voltage': 'currentDayMinBatteryVoltage'
        }

        self._charging_amp_hrs = charging_amp_hrs
        self._power_generation = power_generation
        self._max_charging_power = max_charging_power
        self._power_consumption = power_consumption
        self._discharging_amp_hrs = discharging_amp_hrs
        self._max_battery_voltage = max_battery_voltage
        self._max_charging_current = max_charging_current
        self._max_discharging_power = max_discharging_power
        self._max_discharging_current = max_discharging_current
        self._current_day_min_battery_voltage = current_day_min_battery_voltage

    @classmethod
    def from_dict(cls, dikt) -> 'HistoryGet200ResponseMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The _history_get_200_response_message of this HistoryGet200ResponseMessage.  # noqa: E501
        :rtype: HistoryGet200ResponseMessage
        """
        return util.deserialize_model(dikt, cls)

    @property
    def charging_amp_hrs(self) -> float:
        """Gets the charging_amp_hrs of this HistoryGet200ResponseMessage.


        :return: The charging_amp_hrs of this HistoryGet200ResponseMessage.
        :rtype: float
        """
        return self._charging_amp_hrs

    @charging_amp_hrs.setter
    def charging_amp_hrs(self, charging_amp_hrs: float):
        """Sets the charging_amp_hrs of this HistoryGet200ResponseMessage.


        :param charging_amp_hrs: The charging_amp_hrs of this HistoryGet200ResponseMessage.
        :type charging_amp_hrs: float
        """

        self._charging_amp_hrs = charging_amp_hrs

    @property
    def power_generation(self) -> float:
        """Gets the power_generation of this HistoryGet200ResponseMessage.


        :return: The power_generation of this HistoryGet200ResponseMessage.
        :rtype: float
        """
        return self._power_generation

    @power_generation.setter
    def power_generation(self, power_generation: float):
        """Sets the power_generation of this HistoryGet200ResponseMessage.


        :param power_generation: The power_generation of this HistoryGet200ResponseMessage.
        :type power_generation: float
        """

        self._power_generation = power_generation

    @property
    def max_charging_power(self) -> float:
        """Gets the max_charging_power of this HistoryGet200ResponseMessage.


        :return: The max_charging_power of this HistoryGet200ResponseMessage.
        :rtype: float
        """
        return self._max_charging_power

    @max_charging_power.setter
    def max_charging_power(self, max_charging_power: float):
        """Sets the max_charging_power of this HistoryGet200ResponseMessage.


        :param max_charging_power: The max_charging_power of this HistoryGet200ResponseMessage.
        :type max_charging_power: float
        """

        self._max_charging_power = max_charging_power

    @property
    def power_consumption(self) -> float:
        """Gets the power_consumption of this HistoryGet200ResponseMessage.


        :return: The power_consumption of this HistoryGet200ResponseMessage.
        :rtype: float
        """
        return self._power_consumption

    @power_consumption.setter
    def power_consumption(self, power_consumption: float):
        """Sets the power_consumption of this HistoryGet200ResponseMessage.


        :param power_consumption: The power_consumption of this HistoryGet200ResponseMessage.
        :type power_consumption: float
        """

        self._power_consumption = power_consumption

    @property
    def discharging_amp_hrs(self) -> float:
        """Gets the discharging_amp_hrs of this HistoryGet200ResponseMessage.


        :return: The discharging_amp_hrs of this HistoryGet200ResponseMessage.
        :rtype: float
        """
        return self._discharging_amp_hrs

    @discharging_amp_hrs.setter
    def discharging_amp_hrs(self, discharging_amp_hrs: float):
        """Sets the discharging_amp_hrs of this HistoryGet200ResponseMessage.


        :param discharging_amp_hrs: The discharging_amp_hrs of this HistoryGet200ResponseMessage.
        :type discharging_amp_hrs: float
        """

        self._discharging_amp_hrs = discharging_amp_hrs

    @property
    def max_battery_voltage(self) -> float:
        """Gets the max_battery_voltage of this HistoryGet200ResponseMessage.


        :return: The max_battery_voltage of this HistoryGet200ResponseMessage.
        :rtype: float
        """
        return self._max_battery_voltage

    @max_battery_voltage.setter
    def max_battery_voltage(self, max_battery_voltage: float):
        """Sets the max_battery_voltage of this HistoryGet200ResponseMessage.


        :param max_battery_voltage: The max_battery_voltage of this HistoryGet200ResponseMessage.
        :type max_battery_voltage: float
        """

        self._max_battery_voltage = max_battery_voltage

    @property
    def max_charging_current(self) -> float:
        """Gets the max_charging_current of this HistoryGet200ResponseMessage.


        :return: The max_charging_current of this HistoryGet200ResponseMessage.
        :rtype: float
        """
        return self._max_charging_current

    @max_charging_current.setter
    def max_charging_current(self, max_charging_current: float):
        """Sets the max_charging_current of this HistoryGet200ResponseMessage.


        :param max_charging_current: The max_charging_current of this HistoryGet200ResponseMessage.
        :type max_charging_current: float
        """

        self._max_charging_current = max_charging_current

    @property
    def max_discharging_power(self) -> float:
        """Gets the max_discharging_power of this HistoryGet200ResponseMessage.


        :return: The max_discharging_power of this HistoryGet200ResponseMessage.
        :rtype: float
        """
        return self._max_discharging_power

    @max_discharging_power.setter
    def max_discharging_power(self, max_discharging_power: float):
        """Sets the max_discharging_power of this HistoryGet200ResponseMessage.


        :param max_discharging_power: The max_discharging_power of this HistoryGet200ResponseMessage.
        :type max_discharging_power: float
        """

        self._max_discharging_power = max_discharging_power

    @property
    def max_discharging_current(self) -> float:
        """Gets the max_discharging_current of this HistoryGet200ResponseMessage.


        :return: The max_discharging_current of this HistoryGet200ResponseMessage.
        :rtype: float
        """
        return self._max_discharging_current

    @max_discharging_current.setter
    def max_discharging_current(self, max_discharging_current: float):
        """Sets the max_discharging_current of this HistoryGet200ResponseMessage.


        :param max_discharging_current: The max_discharging_current of this HistoryGet200ResponseMessage.
        :type max_discharging_current: float
        """

        self._max_discharging_current = max_discharging_current

    @property
    def current_day_min_battery_voltage(self) -> float:
        """Gets the current_day_min_battery_voltage of this HistoryGet200ResponseMessage.


        :return: The current_day_min_battery_voltage of this HistoryGet200ResponseMessage.
        :rtype: float
        """
        return self._current_day_min_battery_voltage

    @current_day_min_battery_voltage.setter
    def current_day_min_battery_voltage(self, current_day_min_battery_voltage: float):
        """Sets the current_day_min_battery_voltage of this HistoryGet200ResponseMessage.


        :param current_day_min_battery_voltage: The current_day_min_battery_voltage of this HistoryGet200ResponseMessage.
        :type current_day_min_battery_voltage: float
        """

        self._current_day_min_battery_voltage = current_day_min_battery_voltage
