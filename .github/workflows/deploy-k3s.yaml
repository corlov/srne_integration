name: Deploy Solar Controller Managment Project

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: self-hosted
    steps:
          # --- ШАГ 1: ЕДИНСТВЕННЫЙ ЧИСТЫЙ CHECKOUT ---
          - name: Clean Checkout
            uses: actions/checkout@v3
            with:
              clean: true
              fetch-depth: 0 # Нужно для tj-actions

          # --- ШАГ 2: ЕДИНСТВЕННОЕ ОПРЕДЕЛЕНИЕ ИЗМЕНЕНИЙ ---
          - name: Get changed files
            id: changed-files
            uses: tj-actions/changed-files@v44

          # --- ШАГ 3: ЕДИНСТВЕННЫЙ ЛОГИН В DOCKER HUB ---
          - name: Login to Docker Hub
            uses: docker/login-action@v3
            with:
              username: ${{ secrets.DOCKERHUB_USERNAME }}
              password: ${{ secrets.DOCKERHUB_TOKEN }}

          # ==================================================================
          # ===               ТЕСТОВЫЙ МИКРОСЕРВИС                       ===
          # ==================================================================
          - name: Build and Deploy TEST Service
            if: contains(steps.changed-files.outputs.all_changed_files, 'web_app/backend/services/test_service/')
            run: |
              echo ">>> Building and deploying TEST service..."
              docker build --no-cache --build-arg APP_VERSION=${{ github.sha }} -t ${{ secrets.DOCKERHUB_USERNAME }}/test-service:${{ github.sha }} ./web_app/backend/services/test_service
              docker push ${{ secrets.DOCKERHUB_USERNAME }}/test-service:${{ github.sha }}
              export KUBECONFIG=/etc/rancher/k3s/k3s.yaml
              kubectl apply -f ./web_app/backend/services/test_service/deployment.yaml
              kubectl set image deployment/test-service test-service-container=${{ secrets.DOCKERHUB_USERNAME }}/test-service:${{ github.sha }}

          # ==================================================================
          # ===                     БОЕВОЙ API                             ===
          # ==================================================================
          # - name: Build and Deploy API
          #   if: contains(steps.changed-files.outputs.all_changed_files, 'web_app/backend/services/api/')
          #   run: |
          #     echo ">>> Building and deploying API service..."
          #     docker build --no-cache --build-arg APP_VERSION=${{ github.sha }} -t ${{ secrets.DOCKERHUB_USERNAME }}/complex_api:${{ github.sha }} ./web_app/backend/services/api
          #     docker push ${{ secrets.DOCKERHUB_USERNAME }}/complex_api:${{ github.sha }}
          #     export KUBECONFIG=/etc/rancher/k3s/k3s.yaml
          #     # --- ИСПРАВЛЕНИЕ: ДОБАВЛЯЕМ НАДЕЖНЫЙ 'APPLY' ---
          #     kubectl apply -f ./web_app/backend/services/api/deployment.yaml
          #     # --- ОСТАВЛЯЕМ 'SET IMAGE' ДЛЯ ГАРАНТИРОВАННОГО ОБНОВЛЕНИЯ ---
          #     kubectl set image deployment/service-api complex-api-service=${{ secrets.DOCKERHUB_USERNAME }}/complex_api:${{ github.sha }}
          
          # - name: Build and Deploy API
          #   if: contains(steps.changed-files.outputs.all_changed_files, 'web_app/backend/services/api/')
          #   run: |
          #     echo ">>> Building and deploying API service..."
          #     docker build --no-cache --build-arg APP_VERSION=${{ github.sha }} -t ${{ secrets.DOCKERHUB_USERNAME }}/complex_api:${{ github.sha }} ./web_app/backend/services/api
          #     docker push ${{ secrets.DOCKERHUB_USERNAME }}/complex_api:${{ github.sha }}

          #     export KUBECONFIG=/etc/rancher/k3s/k3s.yaml

          #     # --- ШАГ А: ЗАМЕНЯЕМ ПЛЕЙСХОЛДЕР ---
          #     # Используем двойные кавычки для надежности
          #     sed -i "s|__IMAGE_TAG__|${{ github.sha }}|g" ./web_app/backend/services/api/deployment.yaml

          #     # --- ШАГ Б (ОЧЕНЬ ВАЖНЫЙ): ПРОВЕРЯЕМ РЕЗУЛЬТАТ ЗАМЕНЫ ---
          #     echo ">>> Displaying final deployment.yaml before apply:"
          #     echo "----------------------------------------------------"
          #     cat ./web_app/backend/services/api/deployment.yaml
          #     echo "----------------------------------------------------"

          #     # --- ШАГ В: ПРИМЕНЯЕМ ГОТОВЫЙ МАНИФЕСТ ---
          #     kubectl apply -f ./web_app/backend/services/api/deployment.yaml

          - name: Build and Deploy API
            if: contains(steps.changed-files.outputs.all_changed_files, 'web_app/backend/services/api/')
            run: |
              echo ">>> Building and deploying API service..."
              docker build --no-cache --build-arg APP_VERSION=${{ github.sha }} -t ${{ secrets.DOCKERHUB_USERNAME }}/complex_api:${{ github.sha }} ./web_app/backend/services/api
              docker push ${{ secrets.DOCKERHUB_USERNAME }}/complex_api:${{ github.sha }}

              export KUBECONFIG=/etc/rancher/k3s/k3s.yaml

              # --- ШАГ А: ЗАМЕНЯЕМ ПЛЕЙСХОЛДЕР ИМЕНИ ПОЛЬЗОВАТЕЛЯ ---
              sed -i "s|__DOCKERHUB_USERNAME__|${{ secrets.DOCKERHUB_USERNAME }}|g" ./web_app/backend/services/api/deployment.yaml

              # --- ШАГ Б: ЗАМЕНЯЕМ ПЛЕЙСХОЛДЕР ТЕГА ---
              sed -i "s|__IMAGE_TAG__|${{ github.sha }}|g" ./web_app/backend/services/api/deployment.yaml

              # --- ШАГ В: ПРОВЕРЯЕМ РЕЗУЛЬТАТ ---
              echo ">>> Displaying final deployment.yaml before apply:"
              echo "----------------------------------------------------"
              cat ./web_app/backend/services/api/deployment.yaml
              echo "----------------------------------------------------"

              # --- ШАГ Г: ПРИМЕНЯЕМ ГОТОВЫЙ МАНИФЕСТ ---
              echo ">>> Applying manifest to the cluster..."
              kubectl apply -f ./web_app/backend/services/api/deployment.yaml

          # - name: Build and Deploy API
          #   if: contains(steps.changed-files.outputs.all_changed_files, 'web_app/backend/services/api/')
          #   run: |
          #     echo ">>> Building and deploying API service..."
          #     docker build --no-cache --build-arg APP_VERSION=${{ github.sha }} -t ${{ secrets.DOCKERHUB_USERNAME }}/complex_api:${{ github.sha }} ./web_app/backend/services/api
          #     docker push ${{ secrets.DOCKERHUB_USERNAME }}/complex_api:${{ github.sha }}

          #     export KUBECONFIG=/etc/rancher/k3s/k3s.yaml

          #     # --- ШАГ А: ВСТАВЛЯЕМ ПРАВИЛЬНЫЙ ТЕГ В YAML-ФАЙЛ ---
          #     # Эта команда заменяет плейсхолдер __IMAGE_TAG__ на реальный хэш коммита
          #     sed -i 's|__IMAGE_TAG__|${{ github.sha }}|g' ./web_app/backend/services/api/deployment.yaml

          #     # --- ШАГ Б: ПРИМЕНЯЕМ ГОТОВЫЙ МАНИФЕСТ ---
          #     # Эта команда создаст или обновит ВСЕ объекты из файла (Deployment, Service, Ingress)
          #     kubectl apply -f ./web_app/backend/services/api/deployment.yaml