name: Build, Push and Deploy with Helm

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: self-hosted
    steps:
      # --- ШАГ 1: ПОДГОТОВКА ---
      - name: Clean Checkout
        uses: actions/checkout@v3
        with:
          clean: true

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44

      - name: Login to Docker Hub
        if: steps.changed-files.outputs.all_changed_files != '' # Логинимся, только если есть изменения
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # --- ШАГ 2: СБОРКА ОБРАЗОВ (если были изменения) ---
      # Собираем и пушим только те образы, в коде которых были изменения.

      - name: Build and Push API
        if: contains(steps.changed-files.outputs.all_changed_files, 'web_app/backend/services/api/')
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/complex_api:${{ github.sha }} ./web_app/backend/services/api
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/complex_api:${{ github.sha }}

      - name: Build and Push Test Service
        if: contains(steps.changed-files.outputs.all_changed_files, 'web_app/backend/services/test_service/')
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/test-service:${{ github.sha }} ./web_app/backend/services/test_service
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/test-service:${{ github.sha }}

      - name: Build and Push GPIO
        if: contains(steps.changed-files.outputs.all_changed_files, 'web_app/backend/services/gpio/')
        run: |
          docker build -t localhost:5000/service-gpio:${{ github.sha }} ./web_app/backend/services/gpio
          docker push localhost:5000/service-gpio:${{ github.sha }}

      - name: Build and Push SRNE Adaptor
        if: contains(steps.changed-files.outputs.all_changed_files, 'web_app/backend/services/srne_adaptor/')
        run: |
          docker build -t localhost:5000/service-srne-adaptor:${{ github.sha }} ./web_app/backend/services/srne_adaptor
          docker push localhost:5000/service-srne-adaptor:${{ github.sha }}

      - name: Build and Push Lamp Mode
        if: contains(steps.changed-files.outputs.all_changed_files, 'web_app/backend/services/lamp_mode/')
        run: |
          docker build -t localhost:5000/service-lamp-mode:${{ github.sha }} ./web_app/backend/services/lamp_mode
          docker push localhost:5000/service-lamp-mode:${{ github.sha }}

      - name: Build and Push Trafficlight Mode
        if: contains(steps.changed-files.outputs.all_changed_files, 'web_app/backend/services/trafficlight_mode/')
        run: |
          docker build -t localhost:5000/service-trafficlight-mode:${{ github.sha }} ./web_app/backend/services/trafficlight_mode
          docker push localhost:5000/service-trafficlight-mode:${{ github.sha }}

      - name: Build and Push Frontend
        if: contains(steps.changed-files.outputs.all_changed_files, 'web_app/frontend/')
        run: |
          docker build -t localhost:5000/solar-front:${{ github.sha }} ./web_app/frontend
          docker push localhost:5000/solar-front:${{ github.sha }}

      # --- ШАГ 3: ДЕПЛОЙ В KUBERNETES С ПОМОЩЬЮ HELM ---
      - name: Deploy to K3s with Helm
        run: |
          echo ">>> Deploying all changed services with Helm..."
          export KUBECONFIG=/etc/rancher/k3s/k3s.yaml

          # Собираем команду Helm динамически, добавляя --set только для измененных сервисов
          HELM_CMD="helm upgrade --install solar-main ./web_app/"

          if [[ $(echo "${{ steps.changed-files.outputs.all_changed_files }}" | grep -c "web_app/backend/services/api/") -gt 0 ]]; then
            HELM_CMD="$HELM_CMD --set api.image.tag=${{ github.sha }}"
          fi
          if [[ $(echo "${{ steps.changed-files.outputs.all_changed_files }}" | grep -c "web_app/backend/services/test_service/") -gt 0 ]]; then
            HELM_CMD="$HELM_CMD --set testService.image.tag=${{ github.sha }}"
          fi
          if [[ $(echo "${{ steps.changed-files.outputs.all_changed_files }}" | grep -c "web_app/backend/services/gpio/") -gt 0 ]]; then
            HELM_CMD="$HELM_CMD --set gpio.image.tag=${{ github.sha }}"
          fi
          if [[ $(echo "${{ steps.changed-files.outputs.all_changed_files }}" | grep -c "web_app/backend/services/srne_adaptor/") -gt 0 ]]; then
            HELM_CMD="$HELM_CMD --set srneAdaptor.image.tag=${{ github.sha }}"
          fi
          if [[ $(echo "${{ steps.changed-files.outputs.all_changed_files }}" | grep -c "web_app/backend/services/lamp_mode/") -gt 0 ]]; then
            HELM_CMD="$HELM_CMD --set lampMode.image.tag=${{ github.sha }}"
          fi
          if [[ $(echo "${{ steps.changed-files.outputs.all_changed_files }}" | grep -c "web_app/backend/services/trafficlight_mode/") -gt 0 ]]; then
            HELM_CMD="$HELM_CMD --set trafficlightMode.image.tag=${{ github.sha }}"
          fi
          if [[ $(echo "${{ steps.changed-files.outputs.all_changed_files }}" | grep -c "web_app/frontend/") -gt 0 ]]; then
            HELM_CMD="$HELM_CMD --set frontend.image.tag=${{ github.sha }}"
          fi

          echo ">>> Executing command: $HELM_CMD"
          $HELM_CMD

      # --- ШАГ 4: УПРАВЛЕНИЕ СЕРВИСАМИ SYSTEMD (ОСТАЕТСЯ БЕЗ ИЗМЕНЕНИЙ) ---
      # Helm не управляет systemd, поэтому эти шаги остаются как есть.

      - name: Deploy Init GPIO Script (systemd)
        if: contains(steps.changed-files.outputs.all_changed_files, 'web_app/backend/services/init/')
        run: |
          # ... (твой код для systemd остается здесь без изменений) ...

      - name: Deploy Time Source Script (systemd)
        if: contains(steps.changed-files.outputs.all_changed_files, 'web_app/backend/services/time_source/')
        run: |
          # ... (твой код для systemd остается здесь без изменений) ...

      - name: Deploy WiFi (systemd)
        if: contains(steps.changed-files.outputs.all_changed_files, 'web_app/backend/services/wifi_hotspot_service/')
        run: |
          # ... (твой код для systemd остается здесь без изменений) ...
